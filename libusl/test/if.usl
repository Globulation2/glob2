true := (
	select := fun (ifTrue, _) => ifTrue
	not := false
	and := fun that => that
	or  := fun _ => true
	xor := fun that => that select (false, true)
)

false := (
	select := fun (_, ifFalse) => ifFalse
	not := true
	and := fun _ => false
	or  := fun that => that
	xor := fun that => that select (true, false)
)

if := fun cond => {
	ifTrue := fun trueVal => {
		else := fun _ => trueVal
		this
	}
	ifFalse := fun _ => {
		else := fun falseVal => falseVal
		this
	}
	cond select (ifTrue, ifFalse)
}

if (true) { 1 } else { 2 }
