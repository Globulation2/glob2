source_files = Split("""
BasePlayer.cpp
BaseTeam.cpp
BitArray.cpp
Brush.cpp
Building.cpp
BuildingsTypes.cpp
BuildingType.cpp
Bullet.cpp
ChooseMapScreen.cpp
CPUStatisticsManager.cpp
CreditScreen.cpp
CustomGameOtherOptions.cpp
CustomGameScreen.cpp
DynamicClouds.cpp
EditorMainMenu.cpp
EndGameScreen.cpp
Engine.cpp
EntityType.cpp
Fatal.cpp
FertilityCalculatorDialog.cpp
FertilityCalculatorThread.cpp
FertilityCalculatorThreadMessage.cpp
Glob2.cpp
Glob2Screen.cpp
Glob2Style.cpp
GlobalContainer.cpp
Gradient.cpp
GUIGlob2FileList.cpp
GUIMapPreview.cpp
HeightMapGenerator.cpp
IntBuildingType.cpp
KeyboardManager.cpp
LogFileManager.cpp
MainMenuScreen.cpp
MarkManager.cpp
Minimap.cpp
NewMapScreen.cpp
Order.cpp
OverlayAreas.cpp
PerlinNoise.cpp
Player.cpp
Race.cpp
Ressource.cpp
RessourcesTypes.cpp
ScriptEditorScreen.cpp
Sector.cpp
Settings.cpp
SettingsScreen.cpp
SGSL.cpp
SimplexNoise.cpp
SoundMixer.cpp
Team.cpp
TeamStat.cpp
Utilities.cpp
VoiceRecorder.cpp
WinningConditions.cpp
ai/AICastor.cpp
ai/AI.cpp
ai/AIDescriptionScreen.cpp
ai/AIEcho.cpp
ai/AINames.cpp
ai/AINicowar.cpp
ai/AINull.cpp
ai/AINumbi.cpp
ai/AIToubib.cpp
ai/AIWarrush.cpp
campaign/Campaign.cpp
campaign/CampaignEditor.cpp
campaign/CampaignMainMenu.cpp
campaign/CampaignMenuScreen.cpp
campaign/CampaignSelectorScreen.cpp
game/Game.cpp
game/GameEvent.cpp
game/GameGUI.cpp
game/GameGUIDefaultAssignManager.cpp
game/GameGUIDialog.cpp
game/GameGUIGhostBuildingManager.cpp
game/GameGUIKeyActions.cpp
game/GameGUILoadSave.cpp
game/GameGUIMessageManager.cpp
game/GameGUIToolManager.cpp
game/GameHeader.cpp
game/GameHints.cpp
game/GameObjectives.cpp
game/GameUtilities.cpp
irc/IRC.cpp
irc/IRCTextMessageHandler.cpp
irc/IRCThread.cpp
irc/IRCThreadMessage.cpp
lan/LANFindScreen.cpp
lan/LANGameInformation.cpp
lan/LANMenuScreen.cpp
map/Map.cpp
map/MapEdit.cpp
map/MapEditDialog.cpp
map/MapEditKeyActions.cpp
map/MapGenerationDescriptor.cpp
map/MapGenerator.cpp
map/MapHeader.cpp
map/MapScript.cpp
map/MapScriptError.cpp
map/MapScriptUSL.cpp
map/MapThumbnail.cpp
multiplayer/MultiplayerGame.cpp
multiplayer/MultiplayerGameEvent.cpp
multiplayer/MultiplayerGameEventListener.cpp
multiplayer/MultiplayerGameScreen.cpp
net/NetBroadcaster.cpp
net/NetBroadcastListener.cpp
net/NetConnection.cpp
net/NetConnectionThread.cpp
net/NetConnectionThreadMessage.cpp
net/NetEngine.cpp
net/NetGamePlayerManager.cpp
net/NetListener.cpp
net/NetMessage.cpp
net/NetReteamingInformation.cpp
net/NetTestSuite.cpp
unit/UnitConsts.cpp
unit/Unit.cpp
unit/UnitEditorScreen.cpp
unit/UnitSkin.cpp
unit/UnitsSkins.cpp
unit/UnitType.cpp
yog/YOGAfterJoinGameInformation.cpp
yog/YOGConsts.cpp
yog/YOGDownloadableMapInfo.cpp
yog/YOGGameInfo.cpp
yog/YOGGameResults.cpp
yog/YOGLoginScreen.cpp
yog/YOGMessage.cpp
yog/YOGPlayerPrivateInfo.cpp
yog/YOGPlayerSessionInfo.cpp
yog/YOGPlayerStoredInfo.cpp
yog/YOGRegisterScreen.cpp
yog/client/YOGClientBlockedList.cpp
yog/client/YOGClientChatChannel.cpp
yog/client/YOGClientChatListener.cpp
yog/client/YOGClientCommandManager.cpp
yog/client/YOGClientCommands.cpp
yog/client/YOGClient.cpp
yog/client/YOGClientDownloadableMapList.cpp
yog/client/YOGClientDownloadableMapListener.cpp
yog/client/YOGClientDownloadingMapScreen.cpp
yog/client/YOGClientEvent.cpp
yog/client/YOGClientEventListener.cpp
yog/client/YOGClientFileAssembler.cpp
yog/client/YOGClientGameConnectionDialog.cpp
yog/client/YOGClientGameListListener.cpp
yog/client/YOGClientGameListManager.cpp
yog/client/YOGClientLobbyScreen.cpp
yog/client/YOGClientMapDownloader.cpp
yog/client/YOGClientMapDownloadScreen.cpp
yog/client/YOGClientMapUploader.cpp
yog/client/YOGClientMapUploadScreen.cpp
yog/client/YOGClientOptionsScreen.cpp
yog/client/YOGClientPlayerListListener.cpp
yog/client/YOGClientPlayerListManager.cpp
yog/client/YOGClientRatedMapList.cpp
yog/client/YOGClientRouterAdministrator.cpp
yog/router/YOGServerRouterAdministratorCommands.cpp
yog/router/YOGServerRouterAdministrator.cpp
yog/router/YOGServerRouter.cpp
yog/router/YOGServerRouterManager.cpp
yog/router/YOGServerRouterPlayer.cpp
yog/server/YOGServerAdministratorCommands.cpp
yog/server/YOGServerAdministrator.cpp
yog/server/YOGServerAdministratorList.cpp
yog/server/YOGServerBannedIPListManager.cpp
yog/server/YOGServerChatChannel.cpp
yog/server/YOGServerChatChannelManager.cpp
yog/server/YOGServer.cpp
yog/server/YOGServerFileDistributationManager.cpp
yog/server/YOGServerFileDistributor.cpp
yog/server/YOGServerGame.cpp
yog/server/YOGServerGameLog.cpp
yog/server/YOGServerGameRouter.cpp
yog/server/YOGServerMapDatabank.cpp
yog/server/YOGServerPasswordRegistry.cpp
yog/server/YOGServerPlayer.cpp
yog/server/YOGServerPlayerScoreCalculator.cpp
yog/server/YOGServerPlayerStoredInfoManager.cpp
""")

#server_source_files = Split("""
#yog/YOGDaemon.cpp
#""")


Import('env')
local = env.Clone()
if env["mingw"] or env['PLATFORM'] == 'win32':
    source_files.extend(["C:/msys/1.0/local/lib/libvorbisfile.a", "C:/msys/1.0/local/lib/libvorbis.a", "C:/msys/1.0/local/lib/libogg.a"])

#Add libgag and USL, not as a library, but as an object
source_files.append("#lib/libgag/libgag.a")
source_files.append("#lib/libusl/src/libusl.a")
p1 = local.Program("glob2", source_files)

#Add libgag, not as a library, but as an object
#server_source_files.append("#lib/libgag/libgag_server.a")
#p2 = local.Program("glob2-server", server_source_files)

#if not env['server']:
#    local.Default(p1)
#else:
#    local.Default(p2)

local.Default(p1)

import os
Import('env')
Import("PackTar")

if 'dist' or 'install' in COMMAND_LINE_TARGETS:
    for file in os.listdir("."):
        if file.find(".cpp") != -1 or file.find(".h") != -1:
            PackTar(env["TARFILE"], file)

    PackTar(env["TARFILE"], "SConscript")

SConscript("ai/SConscript")
SConscript("campaign/SConscript")
SConscript("game/SConscript")
SConscript("irc/SConscript")
SConscript("lan/SConscript")
SConscript("map/SConscript")
SConscript("multiplayer/SConscript")
SConscript("net/SConscript")
SConscript("testing/SConscript")
SConscript("unit/SConscript")
SConscript("yog/SConscript")
